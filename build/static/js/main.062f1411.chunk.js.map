{"version":3,"sources":["Components/style/logo.png","Components/API.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Api","state","cityName","weatherDescription","weatherTemperature","weatherHighTemp","weatherLowTemp","gifImage","weatherCard","welcome","handleChange","event","value","target","name","_this","setState","Object","defineProperty","handleSubmit","preventDefault","console","log","city","weatherURL","axios","get","then","data","temp","main","descript","weather","description","humid","humidity","high","temp_max","low","temp_min","gifTerm","gifSearchword","giphyURL","gifResponse","images","original","url","cName","descriptData","this","tempData","highData","lowData","gifData","c","react_default","a","createElement","id","onSubmit","className","type","onChange","style","backgroundImage","concat","textAlign","src","logo","height","width","alignSelf","paddingTop","React","Component","App","API","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.062f1411.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.58c1afd4.png\";","import React from \"react\";\r\n\r\n/* Axios for making API call to open weather and giphy*/\r\nimport axios from \"axios\";\r\n\r\n/* External stylesheet*/\r\nimport \"./style/style.css\";\r\n\r\nimport logo from \"./style/logo.png\";\r\n\r\nclass Api extends React.Component {\r\n  state = {\r\n    cityName: \"\",\r\n    weatherDescription: \"\",\r\n    weatherTemperature: \"\",\r\n    weatherHighTemp: \"\",\r\n    weatherLowTemp: \"\",\r\n    gifImage: \"\",\r\n    weatherCard: false,\r\n    welcome: true\r\n  };\r\n\r\n  handleChange = event => {\r\n    const value = event.target.value;\r\n    const name = event.target.name;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    console.log(this.state.cityName);\r\n\r\n    /* API \"GET\" request to Open weather API*/\r\n    const weatherKey = process.env.REACT_APP_WEATHER_KEY;\r\n\r\n    let city = this.state.cityName;\r\n    let weatherURL =\r\n      \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n      city +\r\n      \",us&APPID=\" +\r\n      weatherKey +\r\n      \"&units=imperial\";\r\n\r\n    axios.get(weatherURL).then(data => {\r\n      console.log(data);\r\n\r\n      /** Variables for weather data */\r\n      let temp = data.data.main.temp;\r\n      let descript = data.data.weather[0].description;\r\n      let humid = data.data.main.humidity;\r\n      let high = data.data.main.temp_max;\r\n      let low = data.data.main.temp_min;\r\n      let gifTerm = \"\";\r\n      console.log(temp + \" \" + descript + \" \" + humid + \" \" + high + \" \" + low);\r\n\r\n      /** Conditional logic that transform the description into a search word for giphy */\r\n      /** Only using most frequent weather descriptions */\r\n\r\n      if (descript === \"clear sky\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Beyonce\";\r\n      } else if (descript === \"light rain\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Nick Cannon\";\r\n      } else if (descript === \"overcast clouds\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Solange\";\r\n      } else if (descript === \"few clouds\") {\r\n        console.log(\"should read...\" + descript);\r\n        gifTerm = \"Beyonce\";\r\n      } else if (descript === \"scattered clouds\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Nick Cannon\";\r\n      } else if (descript === \"broken clouds\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Jay z\";\r\n      } else if (descript === \"shower rain\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Solange\";\r\n      } else if (descript === \"rain\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Nick Cannon\";\r\n      } else if (descript === \"thunderstorm\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Beyonce\";\r\n      } else if (descript === \"snow\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Solange\";\r\n      } else if (descript === \"mist\") {\r\n        console.log(\"should read ... \" + descript);\r\n        gifTerm = \"Nick Cannon\";\r\n      }\r\n\r\n      /** Second API call for Giphy search */\r\n      const giphyKey = process.env.REACT_APP_GIPHY_KEY;\r\n      let gifSearchword = gifTerm;\r\n      let giphyURL =\r\n        \"http://api.giphy.com/v1/gifs/search?q=\" +\r\n        gifSearchword +\r\n        \"&api_key=\" +\r\n        giphyKey;\r\n      let gifResponse = \"\";\r\n\r\n      /** GET request to Giphy API */\r\n      axios.get(giphyURL).then(data => {\r\n        console.log(data);\r\n\r\n        /** Conditional logic that returns specific gif based on search word */\r\n        /* Using limited terms for time purposes*/\r\n        if (gifSearchword === \"nick Cannon\") {\r\n          gifResponse = data.data.data[0].images.original.url;\r\n          console.log(data.data.data[0].images.original.url);\r\n        } else if (gifSearchword === \"solange\") {\r\n          gifResponse = data.data.data[1].images.original.url;\r\n          console.log(data.data.data[1].images.original.url);\r\n        } else {\r\n          gifResponse = data.data.data[2].images.original.url;\r\n          console.log(data.data.data[2].images.original.url);\r\n        }\r\n        /* Setting state for new data */\r\n        this.setState({\r\n          weatherDescription: descript,\r\n          weatherTemperature: temp,\r\n          weatherHighTemp: high,\r\n          weatherLowTemp: low,\r\n          gifImage: gifResponse,\r\n          cName: city,\r\n          weatherCard: true,\r\n          welcome: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    /* Passing data into variables that will be 'rendered' into divs*/\r\n    let descriptData = this.state.weatherDescription;\r\n    let tempData = this.state.weatherTemperature;\r\n    let highData = this.state.weatherHighTemp;\r\n    let lowData = this.state.weatherLowTemp;\r\n    let gifData = this.state.gifImage;\r\n    let c = this.state.cName;\r\n\r\n    return (\r\n      <div>\r\n        <div id=\"formOne\">\r\n          <h2 id=\"header\">Black-U-Weather</h2>\r\n          <form onSubmit={this.handleSubmit} className=\"form\">\r\n            <label>\r\n              Please search a U.S city:\r\n              <input\r\n                type=\"text\"\r\n                name=\"cityName\"\r\n                value={this.state.cityName}\r\n                onChange={this.handleChange}\r\n                className=\"formFeild\"\r\n              />\r\n            </label>\r\n            <div id=\"submit\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Submit\"\r\n                id=\"click\"\r\n                className=\"submitBtn\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <div id=\"mainContainer\" style={{ backgroundImage: `url(${gifData})` }}>\r\n          {this.state.welcome ? (\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <h2>React-U-Weather</h2>\r\n              <img\r\n                src={logo}\r\n                style={{\r\n                  height: \"300px\",\r\n                  width: \"300px\",\r\n                  alignSelf: \"center\",\r\n                  paddingTop: \"70px\"\r\n                }}\r\n              />\r\n            </div>\r\n          ) : null}\r\n\r\n          {this.state.weatherCard ? (\r\n            <div id=\"weatherData\">\r\n              <h1 id=\"city\">{c}</h1>\r\n              <h2 id=\"forcast\">\r\n                <i>{descriptData}</i>\r\n              </h2>\r\n              <h2 id=\"mainTemp\">{tempData}</h2>\r\n              <h2 id=\"secondTemp\">\r\n                low: {highData} high: {lowData}\r\n              </h2>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div>\r\n          <footer id=\"footer\"> Ian Kimble &copy; 2019</footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React from 'react';\r\nimport Api from \"./Components/API\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Api />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}